from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
# URL and login credentials
url = "https://demo.dealsdray.com/"
username = "prexo.mis@dealsdray" # Replace original username
password = "prexo.mis@dealsdray" # Replace original password
# xls_file_path = r"C:\Users\jayac\Downloads\demo-data.xlsx"  # Update with the actual file path

# Setup WebDriver
driver = webdriver.Chrome()
driver.maximize_window()

# Navigate to the website
driver.get(url)

# Find and fill in the username field
username_field = WebDriverWait(driver, 10).until(
    EC.visibility_of_element_located((By.XPATH, "//input[@name='username']")))
username_field.send_keys(username)

# Find and fill in the password field
password_field = WebDriverWait(driver, 10).until(
    EC.visibility_of_element_located((By.XPATH, "//input[@name='password']")))
password_field.send_keys(password)

# Submit the login form (press Enter)
password_field.send_keys(Keys.RETURN)

# Function to attempt different approaches for clicking menu options
def click_menu_option(option_text):
    success = False

    # Approach 1: Directly find and click the menu option
    try:
        menu_option = WebDriverWait(driver, 10).until(
            EC.visibility_of_element_located((By.XPATH, f"//span[contains(@class, 'sidenavHoverShow') and text()='{option_text}']")))
        menu_option.click()
        print(f"Approach 1: Successfully clicked the '{option_text}' option")
        success = True
    except:
        print(f"Approach 1: Failed to click the '{option_text}' option")

    # Approach 2: Check if the option is a button and click it
    if not success:
        try:
            button_option = WebDriverWait(driver, 10).until(
                EC.visibility_of_element_located((By.XPATH, f"//button[contains(@class, 'sidenavHoverShow') and text()='{option_text}']")))
            button_option.click()
            print(f"Approach 2: Successfully clicked the '{option_text}' button")
            success = True
        except:
            print(f"Approach 2: Failed to click the '{option_text}' button")

    # Approach 3: Find button by class name
    if not success:
        try:
            button_option = WebDriverWait(driver, 10).until(
                EC.visibility_of_element_located((By.XPATH, "//button[contains(@class, 'MuiButton-root') and contains(@class, 'MuiButton-containedPrimary')]")))
            button_option.click()
            print(f"Approach 3: Successfully clicked the '{option_text}' button by class name")
            success = True
        except:
            print(f"Approach 3: Failed to click the '{option_text}' button by class name")

    # Approach 4: Find button by text directly
    if not success:
        try:
            button_option = WebDriverWait(driver, 10).until(
                EC.visibility_of_element_located((By.XPATH, f"//span[text()='{option_text}']")))
            button_option.click()
            print(f"Approach 4: Successfully clicked the '{option_text}' button by text")
            success = True
        except:
            print(f"Approach 4: Failed to click the '{option_text}' button by text")

    return success

# Click on the 'Order' option
click_menu_option("Order")

# Click on the 'Orders' option
click_menu_option("Orders")

# Click on the 'Add Bulk Order' option
click_menu_option("Add Bulk Order")

# Locate the input element for file upload
file_input = WebDriverWait(driver, 10).until(
    EC.visibility_of_element_located((By.XPATH, "//input[@type='file']")))

# Specify the file path
file_path = r"C:\Users\jayac\Downloads\demo-data.xlsx"  # Update with the actual file path

# Send the file path to the input element
file_input.send_keys(file_path)

# Locate the next button and click it
next_button = WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.XPATH, "//button[contains(text(), 'Import')]")))
next_button.click()

# Locate the next button and click it
Validate = WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.XPATH, "//button[contains(text(), 'Validate Data')]")))
Validate.click()

time.sleep(5)
# Press Enter to handle the pop-up box
alert = driver.switch_to.alert
alert.accept()

# Close the browser
# driver.quit()
